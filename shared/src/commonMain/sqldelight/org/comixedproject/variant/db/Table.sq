-- The initial database migration

CREATE TABLE ServersDb (
  server_id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL UNIQUE,
  url TEXT NOT NULL,
  username TEXT NOT NULL DEFAULT "",
  password TEXT NOT NULL DEFAULT "",
  accessed_date INTEGER
);

loadAllServers:
SELECT * FROM ServersDb;

createServer:
INSERT OR IGNORE INTO ServersDb(name, url, username, password) VALUES (?, ?, ?, ?);

loadServer:
SELECT * FROM ServersDb WHERE server_id = ?;

updateServer:
UPDATE ServersDb SET name = ?, url = ?, username = ?, password = ?, accessed_date = ? WHERE server_id = ?;

markServerAsAccessed:
UPDATE ServersDb SET accessed_date = ? WHERE server_id = ?;

deleteServer:
DELETE FROM ServersDb WHERE server_id = ?;

CREATE TABLE ServerLinksDb (
  server_link_id INTEGER PRIMARY KEY AUTOINCREMENT,
  server_id INTEGER NOT NULL,
  directory TEXT NOT NULL,
  identifier TEXT NOT NULL,
  link_type TEXT NOT NULL,
  cover_url TEXT NOT NULL,
  download_link TEXT NOT NULL,
  title TEXT NOT NULL,
  downloaded_date INTEGER,
  FOREIGN KEY(server_id) REFERENCES ServersDb(server_id)
);

createLink:
INSERT OR IGNORE INTO ServerLinksDb(server_id, directory, identifier, title, cover_url, download_link, link_type) VALUES(?, ?,?, ?, ?, ?, ?);

markParentLinkAsAccessed:
UPDATE ServerLinksDb SET downloaded_date = ? WHERE server_id = ? AND download_link = ?;

deleteExistingLink:
DELETE FROM ServerLinksDb WHERE server_link_id = ?;

loadAllLinks:
SELECT * FROM ServerLinksDb;

loadLinksForDirectory:
SELECT * FROM ServerLinksDb WHERE server_id = ? AND directory = ?;

loadLink:
SELECT * FROM ServerLinksDb WHERE server_id = ? AND download_link = ?;